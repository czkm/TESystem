<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wuzongbo.tes.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.wuzongbo.tes.po.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="userNo" jdbcType="VARCHAR" property="userno" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="departId" jdbcType="INTEGER" property="departid" />
    <result column="ranks" jdbcType="VARCHAR" property="ranks" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="classesId" jdbcType="INTEGER" property="classesid" />
  </resultMap>
  
  <resultMap type="cn.wuzongbo.tes.po.QueryAllTeacherGetScoreVO" id="selectTeacherGetAllAssessScorceResultMap" extends="BaseResultMap">
    <result column="avgscorce" jdbcType="REAL" property="score" />
    <result column="depart_name" jdbcType="VARCHAR" property="departName" />
  </resultMap>
  

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userName, userNo, password, major, departId, ranks, status, type, classesId
  </sql>
  <select id="selectByClassesIdAndTeacherId" resultMap="BaseResultMap">
  
  SELECT `user`.* from `user` where `user`.classesId=#{classesId,jdbcType=INTEGER}  AND  `user`.id NOT in ( SELECT `user`.id  from assess INNER JOIN `user` ON assess.userId=`user`.id  WHERE `user`.classesId=#{classesId,jdbcType=INTEGER} AND assess.target_teacher=#{teacherId,jdbcType=INTEGER})
  
  </select>
  <select id="selectStudentOfClassesByClassesIdAndTeacherId" resultMap="BaseResultMap">
   SELECT `user`.* from `user` where `user`.classesId=#{classesId,jdbcType=INTEGER} AND `user`.id  in ( SELECT `user`.id  from assess INNER JOIN `user` ON assess.userId=`user`.id  WHERE `user`.classesId=#{classesId,jdbcType=INTEGER} AND assess.target_teacher=#{teacherId,jdbcType=INTEGER})
  </select>
  
  <select id="selectByExample" parameterType="cn.wuzongbo.tes.po.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 自定义 -->
  <select id="selectTeacherGetAllAssessScorce"  resultMap="selectTeacherGetAllAssessScorceResultMap">
 SELECT `user`.* ,AVG(scorce) avgscorce ,department.depart_name from assess 
INNER JOIN `user` on assess.target_teacher=`user`.id 
INNER JOIN department on `user` .departId=department.id
where  assess.usertype=1 GROUP BY assess.target_teacher ORDER BY department.depart_name,avgscorce
  </select>
  
  <select id="selectBetweenTeacherScore" resultMap="selectTeacherGetAllAssessScorceResultMap">
  
 SELECT t.userName, avg(scorce) avgscorce ,d.depart_name FROM (SELECT * FROM  assess where assess.usertype=2) a 
INNER JOIN `user` t on t.id=a.target_teacher  
INNER JOIN department d on d.id=t.departId
GROUP BY a.target_teacher 
ORDER BY d.depart_name,avgscorce
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wuzongbo.tes.po.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wuzongbo.tes.po.User">
    insert into user (id, userName, userNo, 
      password, major, departId, 
      ranks, status, type, 
      classesId)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userno,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{departid,jdbcType=INTEGER}, 
      #{ranks,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{classesid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.wuzongbo.tes.po.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="userno != null">
        userNo,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="departid != null">
        departId,
      </if>
      <if test="ranks != null">
        ranks,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="classesid != null">
        classesId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userno != null">
        #{userno,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="departid != null">
        #{departid,jdbcType=INTEGER},
      </if>
      <if test="ranks != null">
        #{ranks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="classesid != null">
        #{classesid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wuzongbo.tes.po.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userno != null">
        userNo = #{record.userno,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.departid != null">
        departId = #{record.departid,jdbcType=INTEGER},
      </if>
      <if test="record.ranks != null">
        ranks = #{record.ranks,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.classesid != null">
        classesId = #{record.classesid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      userNo = #{record.userno,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      departId = #{record.departid,jdbcType=INTEGER},
      ranks = #{record.ranks,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      classesId = #{record.classesid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wuzongbo.tes.po.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userno != null">
        userNo = #{userno,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="departid != null">
        departId = #{departid,jdbcType=INTEGER},
      </if>
      <if test="ranks != null">
        ranks = #{ranks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="classesid != null">
        classesId = #{classesid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wuzongbo.tes.po.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      userNo = #{userno,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      departId = #{departid,jdbcType=INTEGER},
      ranks = #{ranks,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      classesId = #{classesid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>