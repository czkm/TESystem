<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wuzongbo.tes.mapper.ClassCourseMapper">
  <resultMap id="BaseResultMap" type="cn.wuzongbo.tes.po.ClassCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="teacherid" jdbcType="INTEGER" property="teacherid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="semester" jdbcType="INTEGER" property="semester" />
    <result column="semesteryear" jdbcType="INTEGER" property="semesteryear" />
    <result column="coursetime" jdbcType="VARCHAR" property="coursetime" />
    <result column="weekday" jdbcType="VARCHAR" property="weekday" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, classid, teacherid, courseid, semester, semesteryear, coursetime, weekday, department_id, 
    status
  </sql>
  <select id="selectByExample" parameterType="cn.wuzongbo.tes.po.ClassCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wuzongbo.tes.po.ClassCourseExample">
    delete from class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wuzongbo.tes.po.ClassCourse">
    insert into class_course (id, classid, teacherid, 
      courseid, semester, semesteryear, 
      coursetime, weekday, department_id, 
      status)
    values (#{id,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{teacherid,jdbcType=INTEGER}, 
      #{courseid,jdbcType=INTEGER}, #{semester,jdbcType=INTEGER}, #{semesteryear,jdbcType=INTEGER}, 
      #{coursetime,jdbcType=VARCHAR}, #{weekday,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.wuzongbo.tes.po.ClassCourse">
    insert into class_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="teacherid != null">
        teacherid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="semesteryear != null">
        semesteryear,
      </if>
      <if test="coursetime != null">
        coursetime,
      </if>
      <if test="weekday != null">
        weekday,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=INTEGER},
      </if>
      <if test="semesteryear != null">
        #{semesteryear,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="weekday != null">
        #{weekday,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wuzongbo.tes.po.ClassCourseExample" resultType="java.lang.Integer">
    select count(*) from class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.teacherid != null">
        teacherid = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.semester != null">
        semester = #{record.semester,jdbcType=INTEGER},
      </if>
      <if test="record.semesteryear != null">
        semesteryear = #{record.semesteryear,jdbcType=INTEGER},
      </if>
      <if test="record.coursetime != null">
        coursetime = #{record.coursetime,jdbcType=VARCHAR},
      </if>
      <if test="record.weekday != null">
        weekday = #{record.weekday,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_course
    set id = #{record.id,jdbcType=INTEGER},
      classid = #{record.classid,jdbcType=INTEGER},
      teacherid = #{record.teacherid,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=INTEGER},
      semester = #{record.semester,jdbcType=INTEGER},
      semesteryear = #{record.semesteryear,jdbcType=INTEGER},
      coursetime = #{record.coursetime,jdbcType=VARCHAR},
      weekday = #{record.weekday,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wuzongbo.tes.po.ClassCourse">
    update class_course
    <set>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null">
        teacherid = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="semesteryear != null">
        semesteryear = #{semesteryear,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        coursetime = #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="weekday != null">
        weekday = #{weekday,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wuzongbo.tes.po.ClassCourse">
    update class_course
    set classid = #{classid,jdbcType=INTEGER},
      teacherid = #{teacherid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      semester = #{semester,jdbcType=INTEGER},
      semesteryear = #{semesteryear,jdbcType=INTEGER},
      coursetime = #{coursetime,jdbcType=VARCHAR},
      weekday = #{weekday,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>